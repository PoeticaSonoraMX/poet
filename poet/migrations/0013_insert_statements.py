# Generated by Django 2.0.6 on 2018-09-01 20:02

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('poet', '0012_delete_date_columns'),
    ]

    operations = [

        migrations.RunSQL("""
        INSERT INTO poet_release_state VALUES ('PUBLICADO'), ( 'DEPOSITAR'), ( 'RECHAZADO'), ( 'PENDIENTE')
        """),
        migrations.RunSQL("""
        INSERT INTO poet_entity_type VALUES('Persona'), ( 'Grupo'), ( 'Organización'), ( 'Festival'), ( 'Universidad'), 
        ( 'Colectivo'), ('Estación radiofónica'), ('Educación e investigación'), ( 'Archivo sonoro'), 
        ( 'Servicios de streaming'), ('Museo'), ('Editorial'), ('Sello discográfico'), ('Centro cultural'), 
        ('Banda musical')"""),

        migrations.RunSQL("""INSERT INTO poet_work_type VALUES('Pista son'), ( 'Serie')"""),
        migrations.RunSQL("""
        INSERT INTO poet_entity_to_work_role VALUES ('Lectura en voz alta'), ('Interpretación musical'), 
        ('Ingeniería de sonido'), ('Producción'), ('Dirección'), ('Post-producción'), ('Auxiliar de sonido'), 
        ('Contribuidor'), ('Publicador'), ('Composición'), ('Traducción')"""),

        # ENTITY INSERT STATEMENTS
        migrations.RunSQL("""
        WITH inserts AS (
            SELECT part_id, 
                array_to_string(array_remove(ARRAY[nom_part, nom_materno, nom_paterno], ''), ' ')
                , seudonimo, 'Persona', 
                array_to_string(ARRAY[p.city_of_origin, p.subdivision_of_origin], ', '), p.country_of_origin,
                email, ruta_foto, coment_part, jsonb_strip_nulls(jsonb_build_object('Lugar de la muerte', 
                    array_to_string(
                        array_remove(ARRAY[p.city_of_death, p.subdivision_of_death, p.country_of_death], ''), 
                    ', '), 
                'Sitio Web', sitio_web, 'Dirección', direccion, 'Teléfono', telefono, 'Nacimiento', fecha_comienzo, 
                'Fallecimiento', fecha_finale, 'Género', genero)), estado, ARRAY[]::text[] FROM persona p
        )
        INSERT INTO poet_entity (
          id, full_name, alt_name, entity_type, city, country, email, file_path, commentary, 
          additional_data, release_state, tags
          )  SELECT * FROM inserts;"""),

        migrations.RunSQL("""
        DO $$
        
            DECLARE
                old_query integer;
                new_query integer;
            BEGIN
                SELECT count(*) FROM persona INTO old_query;
                SELECT count(*) FROM poet_entity WHERE entity_type = 'Persona' INTO new_query;
                ASSERT old_query = new_query, concat('PERSONA ENTITY FAILED. ', old_query, ' != ',new_query);
            END;
        $$;"""),


        migrations.RunSQL("""
        WITH inserts AS (
            SELECT part_id, nom_part, tipo_grupo, 
                array_to_string(ARRAY[g.city_of_origin, g.subdivision_of_origin], ','), g.country_of_origin,
                email, coment_part, jsonb_strip_nulls(jsonb_build_object('Sitio Web', quote(sitio_web), 'Dirección', 
                direccion, 'Teléfono', telefono, 'Inicio', fecha_comienzo, 'Finalización', fecha_finale)), 
                estado, ARRAY[]::text[] FROM grupo g
        )
        INSERT INTO poet_entity (
          id, full_name, entity_type, city, country, email, commentary, additional_data, release_state, tags
          )  SELECT * FROM inserts;"""),

        migrations.RunSQL("""
        DO $$
            DECLARE
                old_query integer;
                new_query integer;
            BEGIN
                SELECT count(*) FROM grupo INTO old_query;
                SELECT count(*) FROM poet_entity WHERE entity_type <> 'Persona' INTO new_query;
                ASSERT old_query = new_query, concat('NON-PERSONA ENTITY FAILED. ', old_query, ' != ',new_query);
            END;
        $$;"""),

        migrations.RunSQL("""
        WITH inserts AS (
            SELECT grupo_id, persona_id, TRUE, titulo, 
            jsonb_strip_nulls(jsonb_build_object('Inicio', fecha_comienzo, 'Finalización', fecha_finale))
             FROM persona_grupo
        )
        INSERT INTO poet_entity_to_entity_rel (
          from_entity_id, to_entity_id, contains, role, additional_data
          )  SELECT * FROM inserts;"""),

        migrations.RunSQL("""
        DO $$
            DECLARE
                old_query integer;
                new_query integer;
            BEGIN
                SELECT count(*) FROM persona_grupo INTO old_query;
                SELECT count(*) FROM poet_entity_to_entity_rel INTO new_query;
                ASSERT old_query = new_query, concat('ENTITY RELATION FAILED. ', old_query, ' != ',new_query);
            END;
        $$;"""),

        # WORK INSERT STATEMENTS
        migrations.RunSQL("""
        WITH inserts AS (
            SELECT c.nom, c.nom_alt, 'Pista son', 'AUDIO', concat(a.id , '/', a.nom), 
            array_to_string(ARRAY[p.city_of_origin, p.subdivision_of_origin], ', '), p.country_of_origin, 
            CASE WHEN c.texto <> '' AND c.texto IS NOT NULL 
            THEN concat(p.coment_pista_son, '\r', chr(10), '\r', chr(10),'Texto:\r', chr(10), '\r', c.texto) 
            ELSE p.coment_pista_son 
            END comments_col, 
            jsonb_strip_nulls(
                jsonb_build_object('file_id',a.id, 'comp_id', c.id, 'recording_id', p.pista_son_id, 
            'Número de pista', p.numero_de_pista,'Medios de origen', p.medio, 'Grabación', p.fecha_grab,
            'Contribución', p.fecha_cont, 
            'Duración', a.duracion, 'series_id', p.serie_id, 'Idiomas', ic.nom_idioma,
            'Digitalizado', p.fecha_dig, 'Publicado', c.fecha_pub
                )
            ), 
            array_cat(gm.nom, tc.nom_tema), p.estado, cob.licencia_cobertura, cob.pais_cobertura, 
                to_date(cob.fecha_comienzo, 'YYYY-MM-DD')
            FROM pista_son p 
            JOIN archivo a ON p.pista_son_id = a.pista_son_id
            JOIN composicion c ON c.id = p.composicion_id
            LEFT JOIN (
                SELECT g.pista_son_id, array_agg(gm.nom) nom
                FROM genero_pista g JOIN genero_musical gm on g.gen_mus_id = gm.id
                GROUP BY g.pista_son_id
                ) gm ON gm.pista_son_id = p.pista_son_id
            LEFT JOIN (SELECT * FROM 
                cobertura_licencia cl
                NATURAL JOIN cobertura_tipo ct
                JOIN cobertura c ON c.cobertura_lic_id = cl.id
                ) cob ON cob.pista_son_id = p.pista_son_id
            LEFT JOIN (
                SELECT tc.composicion_id, array_agg(t.nom) nom_tema
                FROM tema_composicion tc JOIN tema t on tc.tema_id = t.id
                GROUP BY tc.composicion_id
                ) tc ON tc.composicion_id = c.id
            LEFT JOIN (
                SELECT ic.composicion_id, array_remove(array_agg(DISTINCT i.nom), NULL) nom_idioma
                FROM idioma_composicion ic JOIN idioma i ON ic.idioma_id = i.id
                GROUP BY ic.composicion_id
                ) ic ON ic.composicion_id = c.id
        )
        INSERT INTO poet_work (
          full_name, alt_name, work_type, file_type, path_to_file, city, country, commentary, 
          additional_data, tags, release_state, copyright, copyright_country, copyright_date
          )  SELECT * FROM inserts;"""),

        migrations.RunSQL("""
        DO $$
            DECLARE
                old_query integer;
                new_query integer;
            BEGIN
                SELECT count(*) FROM pista_son INTO old_query;
                SELECT count(*) FROM poet_work WHERE work_type = 'Pista son' INTO new_query;
                ASSERT old_query = new_query, concat('RECORDING FAILED. ', old_query, ' != ',new_query);
                SELECT sum(pista_son_id) FROM pista_son INTO old_query;
                SELECT sum((additional_data->>'recording_id')::integer) FROM poet_work WHERE work_type = 'Pista son' INTO new_query;
                ASSERT old_query = new_query, concat('RECORDING SUM FAILED. ', old_query, ' != ',new_query);
            END;
        $$;"""),

        migrations.RunSQL("""
        WITH inserts AS (
            SELECT s.nom, 'Serie', s.coment, 'IMAGE', s.ruta_foto, jsonb_strip_nulls(jsonb_build_object('id', s.id, 
            'Giro', s.giro)), estado FROM serie s
        )
        INSERT INTO poet_work (
          full_name, work_type, commentary, file_type, path_to_file, additional_data, release_state
          )  SELECT * FROM inserts;"""),

        migrations.RunSQL("""
        DO $$
            DECLARE
                old_query integer;
                new_query integer;
            BEGIN
                SELECT count(*) FROM serie INTO old_query;
                SELECT count(*) FROM poet_work WHERE work_type = 'Serie' INTO new_query;
                ASSERT old_query = new_query, concat('SERIES FAILED. ', old_query, ' != ',new_query);
            END;
        $$;"""),

        migrations.RunSQL("""
        WITH inserts AS (
            SELECT a.nom, 'Serie', jsonb_strip_nulls(jsonb_build_object('id', a.id, 'series_id', 
                a.serie_id, 'is_album', TRUE)
            ), 'PUBLICADO' FROM album a
        )
        INSERT INTO poet_work (
          full_name, work_type, additional_data, release_state
          )  SELECT * FROM inserts;"""),

    ]
